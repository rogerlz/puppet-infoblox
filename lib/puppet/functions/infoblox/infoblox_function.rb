# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
require_relative '../../../puppet_x/infoblox.rb'
require 'infoblox'

# Sets up the API calls for Infoblox using the infoblox ruby gem.
# ---- original file header ----
#
# @summary
#   Summarise what the function does here
#
Puppet::Functions.create_function(:'infoblox::infoblox_function') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    
    func_name = __method__.to_s.sub!('real_function_', '')

    unless args.length == 1
      raise Puppet::ParseError, "#{func_name}(): wrong number of arguments (#{args.length}; must be 1)"
    end

    fqdn = args[0]

    # TODO: implement exception with begin/rescue
    connection = PuppetX::InfobloxProvider.infoblox_client
    response = Infoblox::Arecord.find(connection, name: fqdn)

    response.ipv4addr
  
  end
end
